{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The adminUserName password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine(s)"
      },
      "defaultValue": "plaadmin"
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "Template Base URL",
        "artifactsBaseUrl": ""
      },
      "defaultValue": ""
    },
    "baseUrlSASToken": {
      "type": "securestring",
      "metadata": {
        "description": "Template SAS Token for Base URL"
      }
    },
    "domainAdminPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The domainAdminUserName password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "domainAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Domain Admin for the specified domain"
      },
      "defaultValue": "contoso\\plaadmin"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Fully Qualified Domain Name. I.E contoso.com"
      },
      "defaultValue": "contoso.local"
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the key vault used for storing the Username and Password combinations"
      },
      "defaultValue": "placontosovault"
    },
    "spContentAccessAccount": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Default Search Content Access account"
      },
      "defaultValue": "contoso\\spcontent"
    },
    "spContentAccessAccountPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Default Search Content Access Account password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "spFarmAccount": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Farm account"
      },
      "defaultValue": "contoso\\spfarm"
    },
    "spFarmAccountPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Farm Account password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "spFarmPassphraseKeyName": {
      "type": "string",
      "metadata": {
        "description": "The Farm Passphrase secret key name"
      },
      "defaultValue": "spsetup"
    },
    "spMySiteUrl": {
      "type": "string",
      "metadata": {
        "description": "The My Site Host Header Site Collection URL"
      },
      "defaultValue": "https://intranet-my.contoso.com"
    },
    "spServiceAppAccount": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Service Application Pool account"
      },
      "defaultValue": "contoso\\spservice"
    },
    "spServiceAppAccountPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Service Application Pool Account password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "spSetupUsername": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Setup account"
      },
      "defaultValue": "contoso\\spsetup"
    },
    "spSetupUserPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Setup account password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "spStorageAccountType": {
      "type": "string",
      "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_ZRS", "Standard_RAGRS", "Premium_LRS" ],
      "metadata": {
        "description": "The Storage Account performance and replication type for SharePoint Servers. Premium recommended"
      },
      "defaultValue": "Standard_LRS"
    },
    "spSuperReaderAccount": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Super Reader Account"
      },
      "defaultValue": "contoso\\spsupreader"
    },
    "spSuperUserAccount": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Super User Account"
      },
      "defaultValue": "contoso\\spsupuser"
    },
    "spWebAppAccount": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Web Application Pool account"
      },
      "defaultValue": "contoso\\spweb"
    },
    "spWebAppAccountPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The SharePoint Web Application Pool Account password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "spWebRootUrl": {
      "type": "string",
      "metadata": {
        "description": "The root web application URL"
      },
      "defaultValue": "https://intranet.contoso.com"
    },
    "sqlDataSizeTB": {
      "type": "int",
      "metadata": {
        "description": "Number of Terrabytes for the SQL Data Disk (Depends on SQL Server VM Size, max 32)"
      },
      "defaultValue": 16,
      "maxValue": 32
    },
    "sqlLoadBalancerStaticIP": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Internal Load Balancer"
      },
      "defaultValue": "10.1.0.6"
    },
    "sqlLogSizeTB": {
      "type": "int",
      "metadata": {
        "description": "Number of Terrabytes for the SQL Log Disk (Depends on SQL Server VM Size, max 32)"
      },
      "defaultValue": 1,
      "maxValue": 3
    },
    "sqlServiceUsername": {
      "type": "string",
      "metadata": {
        "description": "The SQL Service account"
      },
      "defaultValue": "contoso\\sqlservice"
    },
    "sqlServiceUserPasswordKeyName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Service account password secret key name"
      },
      "defaultValue": "spsetup"
    },
    "sqlStorageAccountType": {
      "type": "string",
      "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_ZRS", "Standard_RAGRS", "Premium_LRS" ],
      "metadata": {
        "description": "The Storage Account performance and replication type for SQL Servers. Premium recommended"
      },
      "defaultValue": "Standard_LRS"
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix for the name of the Storage Account, would result in <prefix>spstorage and <prefix>sqlstorage"
      },
      "defaultValue": "sp16pla"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Subnet in the specified Virtual Network"
      },
      "defaultValue": "PLASubnet"
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix to use for server names, would result in <prefix><type><servernumber>, I.E. plaweb1"
      },
      "defaultValue": "PLA"
    },
    "vmNicPrefix": {
      "type": "string",
      "metadata": {
        "description": "NIC Prefix to use for all VM Network Interfaces, would result in <prefix>-<servername><servernumber>, I.E. planic-plaweb1"
      },
      "defaultValue": "sppla"
    },
    "vNetName": {
      "type": "string",
      "metadata": {
        "description": "Name of an existing Virtual Network in the selected Resource Group"
      },
      "defaultValue": "VirtNet"
    },
    "wfeLoadBalancerStaticIP": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Internal Load Balancer"
      },
      "defaultValue": "10.1.0.5"
    },
    "sppublicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of existing public IP resource for Sharepoint"
      }
    },
    "spDNSPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the SharePoint Public IP Address"
      }
    },
    "spPublicIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing existing public IP for Sharepoint"
      }
    },
    "spPublicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the Sharepoint farm's IP is new or existing"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "assetLocations": {
      "DscAssets": "[parameters('baseUrl')]",
      "CreateStorageAccountJSON": "[concat(parameters('baseUrl'), '/infra-storageaccounts.json',parameters('baseUrlSASToken'))]",
      "CreateNICJSON": "[concat(parameters('baseUrl'), '/infra-allnics.json',parameters('baseUrlSASToken'))]",
      "CreateLoadBalancersJSON": "[concat(parameters('baseUrl'), '/infra-loadbalancers.json',parameters('baseUrlSASToken'))]",
      "CreateAvailabilitySetJSON": "[concat(parameters('baseUrl'), '/infra-availabilitysets.json',parameters('baseUrlSASToken'))]",
      "CreateSharePointServersJSON": "[concat(parameters('baseUrl'), '/infra-sharepointservers.json',parameters('baseUrlSASToken'))]",
      "CreateSQLServersJSON": "[concat(parameters('baseUrl'), '/infra-sqlservers.json',parameters('baseUrlSASToken'))]",
      "CreateSQLWitnessJSON": "[concat(parameters('baseUrl'), '/infra-sqlwitness.json',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointServersDSC": "[concat(parameters('baseUrl'), '/ConfigureSharePointAppServer.ps1.zip',parameters('baseUrlSASToken'))]",
      "PrepareSQLWitnessDSC": "[concat(parameters('baseUrl'), '/PrepareSQLWitnessVM.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureAlwaysOnJSON": "[concat(parameters('baseUrl'), '/config-sqlservers.json',parameters('baseUrlSASToken'))]",
      "ConfigureSQLReplicaDSC": "[concat(parameters('baseUrl'), '/ConfigureSQLReplica.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureSQLAOClusterDSC": "[concat(parameters('baseUrl'), '/ConfigureSQLAOCluster.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointFarmJSON": "[concat(parameters('baseUrl'), '/config-sharepointfarm.json',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointAppServerDSC": "[concat(parameters('baseUrl'), '/ConfigureSharePointAppServer.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointDCacheServerDSC": "[concat(parameters('baseUrl'), '/ConfigureSharePointDCacheServer.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointSCServerDSC": "[concat(parameters('baseUrl'), '/ConfigureSharePointSCServer.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointSIServerDSC": "[concat(parameters('baseUrl'), '/ConfigureSharePointSIServer.ps1.zip',parameters('baseUrlSASToken'))]",
      "ConfigureSharePointWFEServerDSC": "[concat(parameters('baseUrl'), '/ConfigureSharePointWFEServer.ps1.zip',parameters('baseUrlSASToken'))]",
      "CreateSharePointIP": "[concat(parameters('baseUrl'), '/infra-sppublicip-',parameters('spPublicIPNewOrExisting'),'.json',parameters('baseUrlSASToken'))]",
      "CreatePublicIPs": "[concat(parameters('baseUrl'), '/infra-publicips.json',parameters('baseUrlSASToken'))]"
    },
    "availabilitySets": {
      "spWebAvailabilitySetName": "spplaWebAvailabilitySet",
      "spAppAvailabilitySetName": "spplaAppAvailabilitySet",
      "spDCacheAvailabilitySetName": "spplaDCacheAvailabilitySet",
      "spSearchIndexAvailabilitySetName": "spplaSearchIndexAvailabilitySet",
      "spSearchCrawlAvailabilitySetName": "spplaSearchCrawlAvailabilitySet",
      "spSqlAvailabilitySetName": "spplaSqlAvailabilitySet"
    },
    "keyVaultResourceID": "[concat(resourceGroup().Id, '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
    "loadBalancers": {
      "spLoadBalancerName": "[concat(parameters('vmNamePrefix'),'wfelb')]",
      "spPublicIPResourceId": "[variables(concat('SpPublicIP',parameters('spPublicIPNewOrExisting')))]",
      "RDPNAT": "RDP",
      "spHTTPNAT": "spHttp",
      "spHTTPSNAT": "spHttps",
      "spCANAT": "spCentralAdmin",
      "LBFE": "LBFE"
    },
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNetName'))]",
    "adSubnetName": "adSubnet",
    "sqlSubnetName": "sqlSubnet",
    "spSubnetName": "spSubnet",
    "networkInterfaces": {
      "vmNamePrefix": "[concat(parameters('vmNamePrefix'),'wfelb')]",
      "vmNicPrefix": "parameters('vmNicPrefix')",
      "adSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('adSubnetName'))]",
      "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('sqlSubnetName'))]",
      "spSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('spSubnetName'))]",
      "RDPNAT": "RDP",
      "spHTTPNAT": "spHttp",
      "spHTTPSNAT": "spHttps",
      "spCANAT": "spCentralAdmin",
      "LBFE": "LBFE"
    },
    "location": "[resourceGroup().location]",
    "sizeOfSPDiskInGB": "100",
    "sqlDiskSizeInGB": "1023",
    "storageAccountNames": {
      "spStorageAccountName": "[concat(parameters('storageAccountNamePrefix'),'spstorage')]",
      "sqlStorageAccountName": "[concat(parameters('storageAccountNamePrefix'),'sqlstorage')]"
    },
    "vmStorageAccountContainerName": "vhds",

    "publicips": {
      "adpublicIPAddressName": "adpublicIP",
      "publicIPAddressType": "Dynamic",
      "sqlpublicIPAddressName": "sqlpublicIP"
    },
    "SettingUpSharepointIPUrl": "[concat(parameters('baseUrl'),'/publicip-',parameters('spPublicIPNewOrExisting'),'.json')]",
    "SpPublicIpnew": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('sppublicIPAddressName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "createStorageAccounts",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('assetLocations').CreateStorageAccountJSON]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "spStorageAccountType": {
            "value": "[parameters('spStorageAccountType')]"
          },
          "sqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          }
        }
      }
    },
    //{
    //  "name": "createSharepointIP",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('assetLocations').CreateSharePointIP]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "publicIpAddressName": {
    //        "value": "[parameters('sppublicIPAddressName')]"
    //      },
    //      "publicIPAddressType": {
    //        "value": "[variables('publicips').publicIPAddressType]"
    //      },
    //      "dnsPrefix": {
    //        "value": "[parameters('spDNSPrefix')]"
    //      },
    //      "publicIpRGName": {
    //        "value": "[parameters('spPublicIPRGName')]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "createPublicIPs",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2015-01-01",
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('assetLocations').CreatePublicIPs]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "adpublicIPAddressName": {
    //        "value": "[variables('publicips').adpublicIPAddressName]"
    //      },
    //      "sqlpublicIPAddressName": {
    //        "value": "[variables('publicips').sqlpublicIPAddressName]"
    //      },
    //      "publicIPAddressType": {
    //        "value": "[variables('publicips').publicIPAddressType]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "type": "Microsoft.Resources/deployments",
    //  "name": "createLoadBalancers",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/createSharepointIP",
    //    "Microsoft.Resources/deployments/createPublicIPs"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('assetLocations').CreateLoadBalancersJSON]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "spLoadBalancerName": {
    //        "value": "[variables('loadBalancers').spLoadBalancerName]"
    //      },
    //      "spPublicIPResourceId": {
    //        "value": "[variables('loadBalancers').spPublicIPResourceId]"
    //      },
    //      "RDPNAT": {
    //        "value": "[variables('loadBalancers').RDPNAT]"
    //      },
    //      "spHTTPNAT": {
    //        "value": "[variables('loadBalancers').spHTTPNAT]"
    //      },
    //      "spHTTPSNAT": {
    //        "value": "[variables('loadBalancers').spHTTPSNAT]"
    //      },
    //      "spCANAT": {
    //        "value": "[variables('loadBalancers').spCANAT]"
    //      },
    //      "LBFE": {
    //        "value": "[variables('loadBalancers').LBFE]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "type": "Microsoft.Resources/deployments",
    //  "name": "createAllNetworkInterfaces",
    //  "apiVersion": "2015-01-01",
    //  "dependsOn": [
    //    "Microsoft.Resources/deployments/createLoadBalancers"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('assetLocations').CreateNICJSON]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "vmNamePrefix": {
    //        "value": "[variables('loadBalancers').vmNamePrefix]"
    //      },
    //      "vmNicPrefix": {
    //        "value": "[variables('loadBalancers').vmNicPrefix]"
    //      },
    //      "adSubnetRef": {
    //        "value": "[variables('loadBalancers').adSubnetRef]"
    //      },
    //      "sqlSubnetRef": {
    //        "value": "[variables('loadBalancers').sqlSubnetRef]"
    //      },
    //      "spSubnetRef": {
    //        "value": "[variables('loadBalancers').spSubnetRef]"
    //      },
    //      "adNicIPAddress": {
    //        "value": "[variables('loadBalancers').spPublicIPResourceId]"
    //      },
    //      "adLBResourceId": {
    //        "value": "[variables('loadBalancers').spPublicIPResourceId]"
    //      },
    //      "sqlLBResourceId": {
    //        "value": "[variables('loadBalancers').spPublicIPResourceId]"
    //      },
    //      "spLBResourceId": {
    //        "value": "[variables('loadBalancers').spPublicIPResourceId]"
    //      },
    //      "LBBE": {
    //        "value": "[variables('loadBalancers').LBFE]"
    //      },
    //      "RDPNAT": {
    //        "value": "[variables('loadBalancers').RDPNAT]"
    //      },
    //      "spHTTPNAT": {
    //        "value": "[variables('loadBalancers').spHTTPNAT]"
    //      },
    //      "spHTTPSNAT": {
    //        "value": "[variables('loadBalancers').spHTTPSNAT]"
    //      },
    //      "spCANAT": {
    //        "value": "[variables('loadBalancers').spCANAT]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "type": "Microsoft.Resources/deployments",
    //  "name": "createAvailabilitySets",
    //  "apiVersion": "2015-01-01",
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      "uri": "[variables('assetLocations').CreateAvailabilitySetJSON]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "spWebAvailabilitySetName": {
    //        "value": "[variables('availabilitySets').spWebAvailabilitySetName]"
    //      },
    //      "spAppAvailabilitySetName": {
    //        "value": "[variables('availabilitySets').spAppAvailabilitySetName]"
    //      },
    //      "spDCacheAvailabilitySetName": {
    //        "value": "[variables('availabilitySets').spDCacheAvailabilitySetName]"
    //      },
    //      "spSearchIndexAvailabilitySetName": {
    //        "value": "[variables('availabilitySets').spSearchIndexAvailabilitySetName]"
    //      },
    //      "spSearchCrawlAvailabilitySetName": {
    //        "value": "[variables('availabilitySets').spSearchCrawlAvailabilitySetName]"
    //      },
    //      "spSqlAvailabilitySetName": {
    //        "value": "[variables('availabilitySets').spSqlAvailabilitySetName]"
    //      }
    //    }
    //  }
    //}
  ]
}